/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package shut.it.down;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.TimeZone;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import de.javasoft.plaf.synthetica.SyntheticaAluOxideLookAndFeel;
import java.awt.Container;
import java.awt.Desktop;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Image;
import java.awt.Insets;
import java.awt.LinearGradientPaint;
import java.awt.Toolkit;
import java.awt.font.TextAttribute;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.Map;
import javax.imageio.ImageIO;
import javax.swing.AbstractAction;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JPanel;
import javax.swing.UIManager;

/**
 *
 * @author abano
 */
public class ShutItDown extends javax.swing.JFrame {

    static ShutItDown g = new ShutItDown();
    public ShutItDown() {
        UIManager.put("Synthetica.window.decoration", Boolean.FALSE);
        try {
            UIManager.setLookAndFeel(new SyntheticaAluOxideLookAndFeel());
        } catch (Exception e) {
            e.printStackTrace();
        }

        Image i = null;
        try {
            i = ImageIO.read(getClass().getResource("iconx.png"));
        } catch (IOException ex) {
            Logger.getLogger(ShutItDown.class.getName()).log(Level.SEVERE, null, ex);
        }
        setIconImage(i);

        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    Date d = new Date();

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jSpinner1 = new javax.swing.JSpinner();
        jSpinner2 = new javax.swing.JSpinner();
        jLabel9 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Shut IT Down");
        setResizable(false);
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
                formWindowLostFocus(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Power Settings", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12), new java.awt.Color(204, 51, 0))); // NOI18N

        jButton1.setText("Set Timer");
        jButton1.setToolTipText("Set timer delay");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        jButton2.setText("Hide");
        jButton2.setToolTipText("Hide the Shut It Down Window");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jButton2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton2KeyPressed(evt);
            }
        });

        jButton3.setText("Cancel");
        jButton3.setToolTipText("Abort the Action");
        jButton3.setEnabled(false);
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });

        jButton4.setText("About");
        jButton4.setToolTipText("About Shut It Down");
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton4MouseClicked(evt);
            }
        });

        jLabel7.setText("Select Shutdown Mode :");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Shuttdown", "Restart", "Sleep", "Hibernait" }));
        jComboBox1.setToolTipText("Mode Choises");
        jComboBox1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jComboBox1MouseClicked(evt);
            }
        });

        jLabel8.setText("Action Time :(HH:MM)");

        jSpinner1.setToolTipText("Hours");

        jSpinner2.setToolTipText("Minutes");

        jLabel9.setText("  :");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSpinner2, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 205, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(15, 15, 15))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton2)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4)
                    .addComponent(jSpinner2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        jLabel1.setText("Current Local Time :");

        jLabel2.setBackground(new java.awt.Color(0, 153, 153));
        jLabel2.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
        jLabel2.setText("Time");
        jLabel2.setToolTipText("The real time");
        ActionListener updateClockAction = new ActionListener() {
            public void actionPerformed(ActionEvent e){
                Date date = Calendar.getInstance().getTime();
                DateFormat dateFormat = new SimpleDateFormat("hh:mm:ss");
                dateFormat.setTimeZone(TimeZone.getDefault());
                String today = dateFormat.format(date);
                jLabel2.setText(today);
            }};
            Timer t = new Timer(1000, updateClockAction);
            t.start();

            jLabel3.setText("Time Left To  :");
            jLabel3.setVisible(false);

            jLabel4.setFont(new java.awt.Font("sansserif", 1, 12)); // NOI18N
            jLabel4.setForeground(new java.awt.Color(204, 51, 0));
            jLabel4.setText("Time");
            jLabel4.setToolTipText("Time left");
            jLabel4.setVisible(false);

            jLabel5.setText("©A . M . S Lab 2015-2016");

            jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/shut/it/down/ezgif.com-resize.gif"))); // NOI18N

            jLabel10.setText("Made BY : ");

            jLabel11.setFont(new java.awt.Font("Monospaced", 1, 11)); // NOI18N
            jLabel11.setForeground(new java.awt.Color(0, 0, 204));
            jLabel11.setText("Abanob Mossad");
            jLabel11.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
            jLabel11.addMouseListener(new java.awt.event.MouseAdapter() {
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    jLabel11MouseClicked(evt);
                }
                public void mouseEntered(java.awt.event.MouseEvent evt) {
                    jLabel11MouseEntered(evt);
                }
                public void mouseExited(java.awt.event.MouseEvent evt) {
                    jLabel11MouseExited(evt);
                }
            });

            javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
            getContentPane().setLayout(layout);
            layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel6)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(6, 6, 6)
                            .addComponent(jLabel3)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jLabel4)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel2)
                            .addGap(49, 49, 49))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addContainerGap())))
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addComponent(jLabel10)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jLabel11)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5)
                    .addGap(14, 14, 14))
            );
            layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel3)
                                .addComponent(jLabel4))
                            .addGap(10, 10, 10))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel2))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addContainerGap())
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11))))
            );

            pack();
            setLocationRelativeTo(null);
        }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBox1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1MouseClicked
    public int mints = 0;
    public int hours = 0;

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        if (jButton1.isEnabled()) {
            hours = (int) jSpinner1.getValue();
            mints = (int) jSpinner2.getValue();

            String ObjButtons[] = {"Yes", "No"};
            if (hours >= 0 && mints >= 0) {
                int PromptResult = JOptionPane.showOptionDialog(null, "Are you sure you want to " + jComboBox1.getSelectedItem() + "?", "Shut It Down", JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE, null, ObjButtons, ObjButtons[1]);
                if (PromptResult == JOptionPane.YES_OPTION) {
                    jButton1.setEnabled(false);
                    jLabel3.setVisible(true);
                    jLabel4.setVisible(true);
                    jLabel3.setText("Time Left To " + jComboBox1.getSelectedItem() + " :");
                    countdown();
                    jButton3.setEnabled(true);
                    if (jComboBox1.getSelectedIndex() == 0) {
                        try {
                            shutdown(hours, mints);
                        } catch (IOException ex) {
                            Logger.getLogger(ShutItDown.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    } else if (jComboBox1.getSelectedIndex() == 1) {
                        try {
                            restart(hours, mints);
                        } catch (IOException ex) {
                            Logger.getLogger(ShutItDown.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    } else if (jComboBox1.getSelectedIndex() == 2) {
                        try {
                            sleep();
                        } catch (IOException ex) {
                            Logger.getLogger(ShutItDown.class.getName()).log(Level.SEVERE, null, ex);
                        }

                    } else if (jComboBox1.getSelectedIndex() == 3) {
                        try {
                            hipr();
                        } catch (IOException ex) {
                            Logger.getLogger(ShutItDown.class.getName()).log(Level.SEVERE, null, ex);
                        }

                    }
                }
            } else {
                JOptionPane.showMessageDialog(null, "Please check your time if it in negative numbers");
            }
        }
    }//GEN-LAST:event_jButton1MouseClicked

    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked
        if (jButton3.isEnabled()) {
            try {
                Runtime.getRuntime().exec("shutdown -a");
            } catch (IOException ex) {
                Logger.getLogger(ShutItDown.class.getName()).log(Level.SEVERE, null, ex);

            }
            jLabel3.setVisible(false);
            jLabel4.setVisible(false);
            timer.stop();
            jButton3.setEnabled(false);
            jButton1.setEnabled(true);
        }
    }//GEN-LAST:event_jButton3MouseClicked

    private void jButton4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseClicked

       ImageIcon icon = new ImageIcon(ShutItDown.class.getResource("iconx_e.png"));
                JOptionPane.showMessageDialog(
                        null,
                        "Shut It Down\n\n"
                        + "•Version   : 1.0.1\n"
                        + "•Develober :Abanob Mosssad\n"
                        + "•The application is free\n"
                        + "Thanks.",
                        "Shut It Down", JOptionPane.PLAIN_MESSAGE,
                        icon);
    }//GEN-LAST:event_jButton4MouseClicked

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowClosed
     int PromptResult2;
    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        String ObjButtons4[] = {"Yes", "No"};
        if(jLabel4.isVisible()){
         PromptResult2 = JOptionPane.showOptionDialog(null, "The timer will be remain running after closing.\nYou should cancel it if you want to.\n Are you sure you want to exit ?", "Shut It Down", JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE, null, ObjButtons4, ObjButtons4[1]);
        }
        else{ PromptResult2 = JOptionPane.showOptionDialog(null, "Are you sure you want to exit ?", "Shut It Down", JOptionPane.DEFAULT_OPTION, JOptionPane.WARNING_MESSAGE, null, ObjButtons4, ObjButtons4[1]);}
        if (PromptResult2 == JOptionPane.YES_OPTION) {
            System.exit(0);
        }
    }//GEN-LAST:event_formWindowClosing

    private void jLabel11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel11MouseClicked
        try {
            Desktop.getDesktop().browse(new URI("https://github.com/abanobmossad"));
        } catch (IOException ex) {
            Logger.getLogger(ShutItDown.class.getName()).log(Level.SEVERE, null, ex);
        } catch (URISyntaxException ex) {
            Logger.getLogger(ShutItDown.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jLabel11MouseClicked
    Font original;
    private void jLabel11MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel11MouseEntered
        original = evt.getComponent().getFont();
        Map attributes = original.getAttributes();
        attributes.put(TextAttribute.UNDERLINE, TextAttribute.UNDERLINE_ON);
        evt.getComponent().setFont(original.deriveFont(attributes));
    }//GEN-LAST:event_jLabel11MouseEntered

    private void jLabel11MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel11MouseExited
        evt.getComponent().setFont(original);
    }//GEN-LAST:event_jLabel11MouseExited
    boolean thi = this.isVisible();
    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        g.setVisible(false);

        final NotificationPopup f = new NotificationPopup();

        final Container c = f.getContentPane();
        c.setLayout(new GridBagLayout());

        final GridBagConstraints constraints = new GridBagConstraints();
        constraints.gridx = 0;
        constraints.gridy = 0;
        constraints.weightx = 0f;
        constraints.weighty = 0f;
        constraints.insets = new Insets(5, 5, 5, 5);
        constraints.fill = GridBagConstraints.BOTH;

        final JButton b = new JButton(new AbstractAction("Show") {

            @Override
            public void actionPerformed(final ActionEvent e) {

                if (thi == false) {
                    g.setVisible(true);
                }
                f.dispose();

            }
        });

        f.setAlwaysOnTop(true);
        b.setOpaque(false);
        b.setMargin(new Insets(1, 4, 1, 4));
        b.setFocusable(false);
        b.setToolTipText("Click to Show the Shut It Down Window");
        c.add(b, constraints);
      
        f.setVisible(true);


    }//GEN-LAST:event_jButton2MouseClicked

    private void jButton2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton2KeyPressed

    }//GEN-LAST:event_jButton2KeyPressed

    private void formWindowLostFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowLostFocus

    }//GEN-LAST:event_formWindowLostFocus

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed

    }//GEN-LAST:event_formKeyPressed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed
    public void ballon() {

    }

    public static void shutdown(int h, int m) throws IOException {
        String shutdownCommand = null;
        int total = ((m * 60) + (h * 60 * 60));
        shutdownCommand = "shutdown.exe -s -t " + total;
        Runtime runtime = Runtime.getRuntime();
        Process proc = runtime.exec(shutdownCommand);

    }

    public static void restart(int h, int m) throws IOException {
        String shutdownCommand = null;
        int total = ((m * 60) + (h * 60 * 60));
        shutdownCommand = "shutdown.exe -r -t " + total;
        Runtime runtime = Runtime.getRuntime();
        Process proc = runtime.exec(shutdownCommand);

    }

    public void sleep() throws IOException {
        slp();
    }

    public void hipr() throws IOException {
        hirbrnait();
    }
    Timer timer;

    public void countdown() {

        ActionListener countDown = new ActionListener() {
            int timeLeft = ((hours * 3600000) + (mints * 60000)); //5 seconds

            @Override
            public void actionPerformed(ActionEvent e) {
                String hms = String.format("%02d:%02d:%02d", TimeUnit.MILLISECONDS.toHours(timeLeft),
                        TimeUnit.MILLISECONDS.toMinutes(timeLeft) - TimeUnit.HOURS.toMinutes(TimeUnit.MILLISECONDS.toHours(timeLeft)),
                        TimeUnit.MILLISECONDS.toSeconds(timeLeft) - TimeUnit.MINUTES.toSeconds(TimeUnit.MILLISECONDS.toMinutes(timeLeft)));
                jLabel4.setText(hms);
                timeLeft -= 1000;
                if (timeLeft <= 0) {
                    timer.stop();
                    System.exit(0);
                }
            }
        };
        timer = new Timer(1000, countDown);
        timer.start();
    }
    Timer tim;

    public void slp() {

        ActionListener countDown = new ActionListener() {
            int timeLeft = ((hours * 3600000) + (mints * 60000)); //5 seconds

            @Override
            public void actionPerformed(ActionEvent e) {
                String hms = String.format("%02d:%02d:%02d", TimeUnit.MILLISECONDS.toHours(timeLeft),
                        TimeUnit.MILLISECONDS.toMinutes(timeLeft) - TimeUnit.HOURS.toMinutes(TimeUnit.MILLISECONDS.toHours(timeLeft)),
                        TimeUnit.MILLISECONDS.toSeconds(timeLeft) - TimeUnit.MINUTES.toSeconds(TimeUnit.MILLISECONDS.toMinutes(timeLeft)));
                String o[] = jLabel4.getText().split(":");
                int x = Integer.parseInt(o[0]);
                int y = Integer.parseInt(o[1]);
                int z = Integer.parseInt(o[2]);
                if (x == 0 && y == 0 && z == 1) {
                    try {
                        Runtime.getRuntime().exec("Rundll32.exe powrprof.dll,SetSuspendState Sleep");
                    } catch (IOException ex) {
                        Logger.getLogger(ShutItDown.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        };
        tim = new Timer(1000, countDown);
        tim.start();
    }

    public void hirbrnait() {

        ActionListener countDown = new ActionListener() {
            int timeLeft = ((hours * 3600000) + (mints * 60000)); //5 seconds

            @Override
            public void actionPerformed(ActionEvent e) {
                String hms = String.format("%02d:%02d:%02d", TimeUnit.MILLISECONDS.toHours(timeLeft),
                        TimeUnit.MILLISECONDS.toMinutes(timeLeft) - TimeUnit.HOURS.toMinutes(TimeUnit.MILLISECONDS.toHours(timeLeft)),
                        TimeUnit.MILLISECONDS.toSeconds(timeLeft) - TimeUnit.MINUTES.toSeconds(TimeUnit.MILLISECONDS.toMinutes(timeLeft)));
                String o[] = jLabel4.getText().split(":");
                int x = Integer.parseInt(o[0]);
                int y = Integer.parseInt(o[1]);
                int z = Integer.parseInt(o[2]);
                if (x == 0 && y == 0 && z == 1) {
                    try {
                        Runtime.getRuntime().exec("Rundll32.exe Powrprof.dll,SetSuspendState");
                    } catch (IOException ex) {
                        Logger.getLogger(ShutItDown.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        };
        tim = new Timer(1000, countDown);
        tim.start();
    }

    public static void main(String args[]) {

        g.setVisible(true);

    }

    /*------------------------popUp minu----------------------*/
    public class NotificationPopup extends JDialog {

        private final LinearGradientPaint lpg;

        public NotificationPopup() {
            setUndecorated(true);
            setSize(100, 100);

            // size of the screen
            final Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();

            // height of the task bar
            final Insets scnMax = Toolkit.getDefaultToolkit().getScreenInsets(
                    getGraphicsConfiguration());
            final int taskBarSize = scnMax.bottom;

            setLocation(screenSize.width - getWidth(), screenSize.height - taskBarSize
                    - getHeight());

            // background paint
            lpg = new LinearGradientPaint(0, 0, 0, getHeight() / 2, new float[]{0f,
                0.3f, 1f}, new Color[]{new Color(0.8f, 0.8f, 1f),
                new Color(0.7f, 0.7f, 1f), new Color(0.6f, 0.6f, 1f)});

            // blue background panel
            setContentPane(new BackgroundPanel());
        }

        private class BackgroundPanel extends JPanel {

            public BackgroundPanel() {
                setOpaque(true);
            }

            @Override
            protected void paintComponent(final Graphics g) {
                final Graphics2D g2d = (Graphics2D) g;
                // background
                g2d.setPaint(lpg);
                g2d.fillRect(1, 1, getWidth() - 2, getHeight() - 2);
                g2d.setColor(new Color(158, 157, 155));

                // border
                g2d.drawRect(0, 0, getWidth() - 1, getHeight() - 1);
            }
        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JSpinner jSpinner2;
    // End of variables declaration//GEN-END:variables
}
